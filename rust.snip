snippet     ac
abbr        AtCoder Coding Template
options     head
    use proconio::input;

    fn main() {
        input! {
            n: usize,
        }
        ${0:TARGET}
    }

snippet     ure
abbr        unreachable match arm
options     head
    _ => unreachable!(),

snippet     ln
abbr        println!
options     head
    println!("{}", ${0:TARGET});

snippet     yesno
abbr        fn yesno(_: bool)
options     head
    fn yesno(b: bool) -> &'static str {
        ["No", "Yes"][b as usize]
    }

snippet     lg
abbr        macro_rules! lg
options     head
    #[macro_export]
    macro_rules! lg {
        (@nl $value:expr) => {
            eprintln!("[{}:{}]", file!(), line!());
            match $value {
                value => {
                    eprint!("{:?}", &value);
                }
            }
        };
        (@contents $head:expr $(,)?) => {
            match $head {
                head => {
                    eprintln!(" {} = {:?}", stringify!($head), &head);
                }
            }
        };
        (@contents $head:expr $(,$tail:expr)+ $(,)?) => {
            match $head {
                head => {
                    eprint!(" {} = {:?},", stringify!($head), &head);
                }
            }
            $crate::lg!(@contents $($tail),*);
        };
        ($($expr:expr),* $(,)?) => {
            eprint!("[{}:{}]", file!(), line!());
            $crate::lg!(@contents $($expr),*)
        };
    }
